definitions:
  appointments.Appointment:
    properties:
      date:
        type: string
      dentist:
        $ref: '#/definitions/dentists.Dentist'
      description:
        type: string
      id:
        type: integer
      patient:
        $ref: '#/definitions/patients.Patient'
    type: object
  dentists.Dentist:
    properties:
      id:
        type: integer
      license:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
  patients.Patient:
    properties:
      address:
        type: string
      dni:
        type: string
      id:
        type: integer
      name:
        type: string
      registration_date:
        type: string
      surname:
        type: string
    type: object
info:
  contact:
    name: API Support (Natalia Garcia, Federico Bustamante, Damian, Camilo Zuleta)
  description: Este es el proyecto final de la materia espcialización backend 3 para
    crear, editar, consultar y borrar las entidades de paciente, dentista y turnos.
  license:
    name: Apache 2.0
    url: http:www.apache.org/licenses/LICENSE-2.0.html
  title: Proyecto Final Especialización backend 3
  version: "1.0"
paths:
  /appointments:
    post:
      description: Creates an Appointment, you must send the fields required to process
        your request Patient, Dentist, Date, Description
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: Create Appointment
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/appointments.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appointments.Appointment'
      summary: Creates an Appointment
      tags:
      - Appointment
  /appointments/{id}:
    delete:
      description: Deletes an Appointment by id, be careful with this action.
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Delete Appointment
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/appointments.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appointments.Appointment'
      summary: Deletes an Appointment by id
      tags:
      - Appointment
    get:
      description: Gets all appointments if any by patient dni
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: DNI
        in: path
        name: DNI
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appointments.Appointment'
      summary: Gets all appointments by dni
      tags:
      - Appointment
    patch:
      description: Updates an Appointment by id, you can send only the appointment
        fields you need to change
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Appointment
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/appointments.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appointments.Appointment'
      summary: Updates an Appointment by id
      tags:
      - Appointment
    put:
      description: Updates an Appointment by id, you must send all of the appointment
        fields to process your request
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Appointment
        in: body
        name: Appointment
        required: true
        schema:
          $ref: '#/definitions/appointments.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/appointments.Appointment'
      summary: Updates an Appointment by id
      tags:
      - Appointment
  /dentists:
    post:
      description: Creates a Dentist, you must send the fields required to process
        your request they are name, surname and license
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: Create Dentist
        in: body
        name: Dentist
        required: true
        schema:
          $ref: '#/definitions/dentists.Dentist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dentists.Dentist'
      summary: Creates a Dentist
      tags:
      - Dentist
  /dentists/{id}:
    delete:
      description: Deletes a Dentist by ID, be careful with this option!
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dentists.Dentist'
      summary: Deletes a Dentist by id
      tags:
      - Dentist
    get:
      description: Gets a Dentist by id using the repository principal
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dentists.Dentist'
      summary: Gets a Dentist by id
      tags:
      - Dentist
    patch:
      description: Updates a Dentist by id, you must send all of the dentist required
        fields to process your request
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: update Dentist
        in: body
        name: Dentist
        required: true
        schema:
          $ref: '#/definitions/dentists.Dentist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dentists.Dentist'
      summary: Updates a Dentist by id
      tags:
      - Dentist
    put:
      description: Updates a Dentist by id, you must send all of the dentist fields
        to process your request
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: update Dentist
        in: body
        name: Dentist
        required: true
        schema:
          $ref: '#/definitions/dentists.Dentist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dentists.Dentist'
      summary: Updates a Dentist by id
      tags:
      - Dentist
  /patients:
    post:
      description: Creates a Patient, you must send the fields required to process
        your request they are name, surname, address, dni, and registration date.
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: create Patient
        in: body
        name: Patient
        required: true
        schema:
          $ref: '#/definitions/patients.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/patients.Patient'
      summary: Creates a Patient
      tags:
      - Patient
  /patients/{id}:
    delete:
      description: Deletes a Patient by ID, be careful with this option!
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/patients.Patient'
      summary: Deletes a Patient by id
      tags:
      - Patient
    get:
      description: Gets a Patient by id using the repository principal
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/patients.Patient'
      summary: Gets a Patient by id
      tags:
      - Patient
    patch:
      description: Updates a Patient by ID, you may be noticed is not required to
        send data in all of the fields
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: update Patient
        in: body
        name: Patient
        required: true
        schema:
          $ref: '#/definitions/patients.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/patients.Patient'
      summary: Updates a Patient by id
      tags:
      - Patient
    put:
      description: Updates a Patient by ID, you must send all of the patient fields
        to process your request
      parameters:
      - description: publicKey
        in: header
        name: PUBLIC-KEY
        required: true
        type: string
      - description: secretKey
        in: header
        name: SECRET_KEY
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: update Patient
        in: body
        name: Patient
        required: true
        schema:
          $ref: '#/definitions/patients.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/patients.Patient'
      summary: Updates a Patient by id
      tags:
      - Patient
swagger: "2.0"
